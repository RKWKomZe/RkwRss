
config.tx_extbase{
	persistence{
		classes {


            RKW\RkwBasics\Domain\Model\Pages {
                subclasses {
                    Tx_RkwRss_Pages = RKW\RkwRss\Domain\Model\Pages
                }
            }

            RKW\RkwBasics\Domain\Model\PagesLanguageOverlay {
                subclasses {
                    Tx_RkwRss_PagesLanguageOverlay = RKW\RkwRss\Domain\Model\PagesLanguageOverlay
                }
            }

            RKW\RkwRss\Domain\Model\Pages {
                mapping {
                    tableName = pages

                    # on pages tables it's the doktype
                    # if we set an value, we filter by it
                    # if we do not set anything, all pages are found
                    recordType =

                    # mapping to properties of class
                    columns {
                        uid.mapOnProperty = uid
                        pid.mapOnProperty = pid
                        sorting.mapOnProperty = sorting
                        crdate.mapOnProperty = crdate
                        tstamp.mapOnProperty = tstamp
                        hidden.mapOnProperty = hidden
                        deleted.mapOnProperty = deleted
                        title.mapOnProperty = title
                        subtitle.mapOnProperty = subtitle
                        no_search.mapOnProperty = noSearch
                        lastUpdated.mapOnProperty = lastUpdated
                        abstract.mapOnProperty = abstract
                    }
                }
            }

            RKW\RkwRss\Domain\Model\PagesLanguageOverlay {

                mapping {

                    # set table name to map to
                    tableName = pages_language_overlay

                    # on pages tables it's the doktype
                    # if we set an value, we filter by it
                    # if do not set anything, all pages are found
                    recordType =

                    # mapping to properties of class
                    columns {
                        uid.mapOnProperty = uid
                        pid.mapOnProperty = pid
                        sorting.mapOnProperty = sorting
                        crdate.mapOnProperty = crdate
                        tstamp.mapOnProperty = tstamp
                        hidden.mapOnProperty = hidden
                        deleted.mapOnProperty = deleted
                        title.mapOnProperty = title
                        subtitle.mapOnProperty = subtitle
                        no_search.mapOnProperty = noSearch
                        lastUpdated.mapOnProperty = lastUpdated
                        abstract.mapOnProperty = abstract
                        sys_language_uid.mapOnProperty = sysLanguageUid
                    }
                }
            }
            RKW\RkwRss\Domain\Model\TtContent {
                mapping {
                    tableName = tt_content
                }
            }
		}
	}
}



plugin.tx_rkwrss {
	view {
		templateRootPaths.0 = {$plugin.tx_rkwrss.view.templateRootPath}
		partialRootPaths.0 = {$plugin.tx_rkwrss.view.partialRootPath}
		layoutRootPaths.0 = {$plugin.tx_rkwrss.view.layoutRootPath}
	}
	persistence {
		storagePid = {$plugin.tx_rkwrss.persistence.storagePid}
	}
	
	settings {

        global {

            # @deprecated
	        # cat=plugin.tx_rkwrss; type=integer; label=PageUid for RSS-Feed
 			pageUid= {$plugin.tx_rkwrss.settings.global.pageUid}

 			# cat=plugin.tx_rkwrss; type=integer; label=RootPid for RSS-Feed
            rootPid= {$plugin.tx_rkwrss.settings.global.rootPid}

			# max items in feed
			limit = {$plugin.tx_rkwrss.settings.global.limit}

			# cat=plugin.tx_rkwrss; type=string; label=Field that is used for sorting
			orderField = {$plugin.tx_rkwrss.settings.global.orderField}

            # @deprecated
			# cat=plugin.tx_rkwrss; type=string; label=List of colPos that is used to fetch contents from (for e.g. Facebook Instant Articles)
			contentColPos = {$plugin.tx_rkwrss.settings.global.contentColPos}

            # cat=plugin.tx_rkwrss; type=string; label=Column-name and value that is used to fetch contents from (for e.g. Facebook Instant Articles)
            contentColumn = {$plugin.tx_rkwrss.settings.global.contentColumn}

        }

		rss {

			# cat=plugin.tx_rkwrss; type=integer; label=TypeNum for RSS-Feed
			typeNum = {$plugin.tx_rkwrss.settings.rss.typeNum}

			# cat=plugin.tx_rkwrss; type=string; label=Name for RSS-Feed
			feedName = {$plugin.tx_rkwrss.settings.rss.feedName}

			# cat=plugin.tx_rkwrss; type=string; label=Page Description
			feedDescription = {$plugin.tx_rkwrss.settings.rss.feedDescription}

			# cat=plugin.tx_rkwrss; type=string; label=Relative Path to Icon of Feed
			feedIcon = {$plugin.tx_rkwrss.settings.rss.feedIcon}

			# cat=plugin.tx_rkwrss; type=string; label=Copyright hint
			copyrightHint = {$plugin.tx_rkwrss.settings.rss.copyrightHint}

			# cat=plugin.tx_rkwrss; type=string; label=Tracking Account Id
			trackingAccountId = {$plugin.tx_rkwrss.settings.rss.trackingAccountId}
		}


		instantArticles {

			# cat=plugin.tx_rkwrss; type=integer; label=TypeNum for RSS-Feed
			typeNum = {$plugin.tx_rkwrss.settings.instantArticles.typeNum}


			# cat=plugin.tx_rkwrss; type=string; label=Name for RSS-Feed
			feedName = {$plugin.tx_rkwrss.settings.instantArticles.feedName}

			# cat=plugin.tx_rkwrss; type=string; label=Page Description
			feedDescription = {$plugin.tx_rkwrss.settings.instantArticles.feedDescription}

			# cat=plugin.tx_rkwrss; type=string; label=Relative Path to Icon of Feed
			feedIcon = {$plugin.tx_rkwrss.settings.instantArticles.feedIcon}

			# cat=plugin.tx_rkwrss; type=string; label=Copyright hint
			copyrightHint = {$plugin.tx_rkwrss.settings.instantArticles.copyrightHint}

			# cat=plugin.tx_rkwrss; type=string; label=Tracking Account Id
			trackingAccountId = {$plugin.tx_rkwrss.settings.instantArticles.trackingAccountId}
			
		}
	}
}


#=================================================================================

plugin.tx_rkwrss._CSS_DEFAULT_STYLE (

)

#=================================================================================

txRkwRssPage = PAGE
txRkwRssPage {

	typeNum = {$plugin.tx_rkwrss.settings.rss.typeNum}
	config {

		disableAllHeaderCode = 1
		admPanel = 0
		no_cache = 0
		debug = 0

		additionalHeaders.10.header = Content-Type:text/xml;charset=utf-8
		metaCharset = utf-8

		index_enable = 0
		index_metatags = 0
		index_externals = 0

		// for absolute paths in pictures and internal links
		absRefPrefix = http://example.com/

		// no spam protection here since this freaks Facebook Instant Articles out
		spamProtectEmailAddresses = 0

	}

	10 = USER_INT
	10 {
		userFunc = TYPO3\CMS\Extbase\Core\Bootstrap->run
		extensionName = RkwRss
		pluginName = Rkwrssfeed
		vendorName = RKW
		controller = Rss
		switchableControllerActions {

			# Again: Controller-Name and Action
			Rss {
				1 = rss
			}
		}

		view < plugin.tx_rkwrss.view
		persistence < plugin.tx_rkwrss.persistence
		settings < plugin.tx_rkwrss.settings
	}
}


txRkwRssInstantArticles < txRkwRssPage
txRkwRssInstantArticles {

	typeNum = {$plugin.tx_rkwrss.settings.instantArticles.typeNum}
	10 {

		switchableControllerActions {

			# Again: Controller-Name and Action
			Rss {
				1 = instantArticles

			}
		}
	}
}

# Add RSS-Feed to page
page {

	headerData {

		999 = TEXT
		999 {

			wrap = <link rel="alternate" type="application/rss+xml" title="{$plugin.tx_rkwrss.settings.rss.feedName}" href="|" />
			typolink {
				parameter = {$plugin.tx_rkwrss.settings.rss.pageUid}
				additionalParams = &type={$plugin.tx_rkwrss.settings.rss.typeNum}
				returnLast = url
			}
		}
	}
}

[globalVar = GP:no_rss = 1]
    page.headerData.999 >
[end]